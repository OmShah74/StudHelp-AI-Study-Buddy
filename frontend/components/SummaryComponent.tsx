// frontend/components/SummaryComponent.tsx (Complete, Updated File)

'use client';
import { useState } from 'react';
import { summarizeDocument } from '@/lib/api';
import { LoaderCircle, BookOpen, Check } from 'lucide-react';
import toast from 'react-hot-toast';

export default function SummaryComponent({ documentId }: { documentId: string }) {
  const [summary, setSummary] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(false);

  const handleGenerateSummary = async () => {
    setIsLoading(true);
    setSummary(null);
    const summaryToast = toast.loading('Generating your summary...');

    try {
      const response = await summarizeDocument(documentId);
      setSummary(response.data.summary);
      toast.success('Summary generated!', { id: summaryToast });
    } catch (err) {
      console.error(err);
      toast.error('Failed to generate summary.', { id: summaryToast });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="w-full max-w-4xl mx-auto p-4">
      {!summary && (
        <div className="flex flex-col items-center text-center">
            <div className="p-6 bg-slate-800 border border-indigo-500/30 rounded-full mb-6">
                <BookOpen size={40} className="text-indigo-400" />
            </div>
            <h2 className="text-2xl font-bold mb-4">Generate Document Summary</h2>
            <p className="text-slate-400 mb-8 max-w-md">Click the button below to generate a concise summary and key takeaways from your document.</p>
            <button
                onClick={handleGenerateSummary}
                disabled={isLoading}
                className="px-8 py-3 flex items-center space-x-2 bg-indigo-600 text-white font-semibold rounded-lg shadow-lg hover:bg-indigo-700 disabled:bg-slate-600 disabled:cursor-not-allowed transition-transform transform hover:scale-105"
            >
            {isLoading ? <LoaderCircle className="animate-spin" /> : <BookOpen />}
            <span>{isLoading ? 'Generating...' : 'Generate Summary'}</span>
            </button>
        </div>
      )}

      {summary && (
        <div className="mt-4 p-8 bg-slate-800 border border-slate-700 rounded-xl shadow-2xl animate-fade-in">
          <h2 className="text-3xl font-extrabold text-white mb-6 gradient-text">Document Summary</h2>
          {/* Using custom styling for content generated by the LLM */}
          <div 
            className="prose prose-invert prose-lg max-w-none prose-p:text-slate-300 prose-headings:text-indigo-400 prose-ul:list-none prose-li:pl-6 prose-li:relative prose-li:before:content-['âœ“'] prose-li:before:absolute prose-li:before:left-0 prose-li:before:text-indigo-400" 
            dangerouslySetInnerHTML={{ __html: summary.replace(/\n/g, '<br />').replace(/Key Points:/g, '<h3>Key Points:</h3>').replace(/-\s/g, '<li>') }}
          />
        </div>
      )}
    </div>
  );
}